<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:http="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

        <!--<context:property-placeholder location="database.properties"></context:property-placeholder>-->

        <!--读取JDBC的配置文件-->
        <context:property-placeholder location="classpath:database.properties"/>
        <!--JNDI获取数据源（dbcp连接池）-->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
                <property name="driverClassName" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${user}"/>
                <property name="password" value="${password}"/>
                <property name="initialSize" value="${initialSize}"/>
                <property name="maxActive" value="${maxActive}"/>
                <property name="maxIdle" value="${maxIdle}"/>
                <property name="minIdle" value="${minIdle}"/>
                <property name="maxWait" value="${maxWait}"/>
                <!--当前空闲连接数<2&&（当前最大活动数>最大活动数-3）-->
                <property name="removeAbandoned" value="${removeAbandoned}"/>

                <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>


                <!--sql心跳 :保证连接池中连接是真实有效的连接 -->
                <!--开启Evict的定时校验，循环校验-->
                 <property name="testWhileIdle" value="true"/>
                <!--定义Evict的时间间隔，单位：毫秒，大于0才会开启evict-->
                <property name="timeBetweenEvictionRunsMillis" value="60000"/>
                <property name="testOnBorrow" value="false"/>
                <property name="testOnReturn" value="false"/>
                <!--检验使用的sql语句，validationQuery,复杂的校验sql会影响性能-->
                <property name="validationQuery" value="select 1"/>
                <!--配置每次校验链接的数量-->
                <property name="numTestsPerEvictionRun" value="${maxActive}"/>
        </bean>


        <!--事务管理-->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
               <property name="dataSource" ref="dataSource"/>
       </bean>


        <!--配置mybatis sqlSessionFactoryBean-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <property name="dataSource" ref="dataSource"/>
                <property name="configLocation" value="classpath:mybatis-config.xml"/>
        </bean>


        <!--AOP事务管理-->
        <aop:aspectj-autoproxy/>
        <aop:config proxy-target-class="true">
                <aop:pointcut id="transService" expression="execution(* org.slsale.service..*.*(..))"/>
                <aop:advisor advice-ref="txAdvice" pointcut-ref="transService"/>
        </aop:config>
        <!--txAdvice:需要定义事务管理器，进行事务管理-->
        <tx:advice id="txAdvice" transaction-manager="transactionManager">
                <tx:attributes>
                        <tx:method name="hl*" propagation="REQUIRED" rollback-for="Exception"/>
                </tx:attributes>
        </tx:advice>



        <!--mapper接口所在的包名，spring会自动查找其下的Mapper-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <property name="basePackage" value="org.slsale.dao"/>
        </bean>


        <!--redis配置-->
        <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
            <!-- 最大连接数 -->
            <property name="maxTotal" value="30" />
            <!-- 最大空闲连接数 -->
            <property name="maxIdle" value="10" />
            <!-- 每次释放连接的最大数目 -->
            <property name="numTestsPerEvictionRun" value="1024" />
            <!-- 释放连接的扫描间隔（毫秒） -->
            <property name="timeBetweenEvictionRunsMillis" value="30000" />
            <!-- 连接最小空闲时间 -->
            <property name="minEvictableIdleTimeMillis" value="1800000" />
            <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
            <property name="softMinEvictableIdleTimeMillis" value="10000" />
            <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
            <property name="maxWaitMillis" value="1500" />
            <!-- 在获取连接的时候检查有效性, 默认false -->
            <property name="testOnBorrow" value="true" />
            <!-- 在空闲时检查有效性, 默认false -->
            <property name="testWhileIdle" value="true" />
            <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
            <property name="blockWhenExhausted" value="false" />
        </bean>
        <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
            <constructor-arg ref="jedisPoolConfig"/>
            <constructor-arg value="127.0.0.1"/>
            <constructor-arg value="3306"/>
        </bean>
        <bean id="redisAPI" class="org.slsale.common.RedisAPI"  >
            <property name="jedisPool" ref="jedisPool"/>
        </bean>
</beans>
